{
    "dversion": "1.0",
    "dtype": "testrun",
    "resultitems": [
        {
            "name": "<session>",
            "instance": "7f430fd9-150f-463c-8dd8-678964099f9f",
            "parent": null,
            "rtype": "JOB"
        },
        {
            "name": "mojo",
            "instance": "84f7b215-56de-4585-a7cf-f1b6727ac508",
            "parent": "7f430fd9-150f-463c-8dd8-678964099f9f",
            "rtype": "TEST_CONTAINER"
        },
        {
            "name": "mojo.tests",
            "instance": "e0cde74f-8978-40f2-b0c8-817a989459cb",
            "parent": "84f7b215-56de-4585-a7cf-f1b6727ac508",
            "rtype": "TEST_CONTAINER"
        },
        {
            "name": "mojo.tests.testplus",
            "instance": "a7d62240-15d4-4de0-a2bc-f6d84bedc52d",
            "parent": "e0cde74f-8978-40f2-b0c8-817a989459cb",
            "rtype": "TEST_CONTAINER"
        },
        {
            "name": "mojo.tests.testplus.test_error_formatting",
            "instance": "6702e306-57bf-4fb1-a294-154392a63357",
            "parent": "a7d62240-15d4-4de0-a2bc-f6d84bedc52d",
            "rtype": "TEST_CONTAINER"
        },
        {
            "name": "mojo.tests.testplus.test_error_formatting#test_intentional_error",
            "monikers": [],
            "pivots": {},
            "instance": "335dee9d-a3ae-4092-b8d9-9b0f883fbcc5",
            "parent": "6702e306-57bf-4fb1-a294-154392a63357",
            "rtype": "TEST",
            "result": "FAILED",
            "start": "2023-06-25T2106!49.222832",
            "stop": "2023-06-25T2106!49.262879",
            "detail": {
                "errors": [],
                "failures": [
                    [
                        "AssertionError: (\"'Intentional error' API result verification failed because the found value did not match expected value:\\nEXPECTED:\\nEXPECTED: True\\nFOUND: False\",)",
                        "TRACEBACK (most recent call last):",
                        "  File \"/home/myron/repos/testplus/source/packages/mojo/testplus/verification.py\", line 131, in assert_equal",
                        "    test_intentional_error()",
                        "    CODE:",
                        "      def assert_equal(found: Any, expected: Any, api: Optional[str] = None):",
                        "          \"\"\"",
                        "              Verifies that the specified return result from the specified API has the specified expected value.",
                        "              If the verification fails then an :class:`AssertionError` is created and returned, otherwise None",
                        "              is returned. It is the resposibility of the calling test to raise the returned error.",
                        "",
                        "              :param found: The value to be compared",
                        "              :param expected: The expected value",
                        "              :param api: The name of the API that returned the result being inspected.",
                        "",
                        "              :returns: None or an :class:`AssertionError` for the caller to raise.",
                        "          \"\"\"",
                        "",
                        "          if found != expected:",
                        "",
                        "              msg_prefix = PREFIX_STD if api is None else PREFIX_API.format(api)",
                        "",
                        "              err_msg_lines = [",
                        "                  \"{} verification failed because the found value did not match expected value:\".format(msg_prefix),",
                        "                  \"EXPECTED:\"",
                        "              ]",
                        "",
                        "              exp_format_lines = pformat(expected, indent=4).strip().splitlines()",
                        "              if len(exp_format_lines) == 1:",
                        "                  err_msg_lines.append(\"EXPECTED: {}\".format(exp_format_lines[0]))",
                        "              elif len(exp_format_lines) > 1:",
                        "                  err_msg_lines.append(\"EXPECTED:\")",
                        "                  exp_format_lines = indent_lines(exp_format_lines, 1)",
                        "                  err_msg_lines.extend(exp_format_lines)",
                        "",
                        "              found_format_lines = pformat(found, indent=4).splitlines()",
                        "              if len(found_format_lines) == 1:",
                        "                  err_msg_lines.append(\"FOUND: {}\".format(found_format_lines[0]))",
                        "              elif len(found_format_lines) > 1:",
                        "                  err_msg_lines.append(\"FOUND:\")",
                        "                  found_format_lines = indent_lines(found_format_lines, 1)",
                        "                  err_msg_lines.extend(found_format_lines)",
                        "",
                        "              errmsg = os.linesep.join(err_msg_lines)",
                        "              raise AssertionError(errmsg)",
                        "",
                        "          return",
                        "",
                        "  File \"/home/myron/repos/testplus/source/testroots/mojo/tests/testplus/test_error_formatting.py\", line 6, in test_intentional_error",
                        "    scope_mojo_tests_testplus_test_error_formatting(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 70, in scope_mojo_tests_testplus_test_error_formatting",
                        "    scope_mojo_tests_testplus_test_error_formatting(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 69, in scope_mojo_tests_testplus_test_error_formatting",
                        "    scope_mojo_tests_testplus(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 54, in scope_mojo_tests_testplus",
                        "    scope_mojo_tests(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 44, in scope_mojo_tests",
                        "    scope_mojo(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 34, in scope_mojo",
                        "    session(sequencer=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>)",
                        "",
                        "  File \"/home/myron/mjr/results/testresults/2023-06-25T2106!48.804103/testrun_sequence.py\", line 24, in session",
                        "    execute_tests(self=<mojo.testplus.testsequencer.TestSequencer object at 0x7fa375d49000>, runid='7f430fd9-150f-463c-8dd8-678964099f9f', recorder=<mojo.testplus.recorders.JsonResultRecorder object at 0x7fa375dc43d0>)",
                        "",
                        "  File \"/home/myron/repos/testplus/source/packages/mojo/testplus/testsequencer.py\", line 649, in execute_tests",
                        "    execute(self=<mojo.testplus.testjob.DefaultTestJob object at 0x7fa375d489a0>)",
                        "",
                        "  File \"/home/myron/repos/testplus/source/packages/mojo/testplus/testjob.py\", line 285, in execute",
                        "    generic_test_entrypoint()",
                        "",
                        "  File \"/home/myron/repos/testplus/source/packages/mojo/testplus/entrypoints.py\", line 132, in generic_test_entrypoint",
                        "    <module>()",
                        "",
                        "  File \"/home/myron/repos/testplus/source/testroots/mojo/tests/testplus/test_error_formatting.py\", line 11, in <module>",
                        "",
                        ""
                    ]
                ],
                "warnings": []
            }
        }
    ],
    "title": "",
    "runid": "7f430fd9-150f-463c-8dd8-678964099f9f",
    "build": {
        "branch": "(not-set)",
        "build": "(not-set)",
        "flavor": "(not-set)"
    },
    "pipeline": {
        "id": "(not-set)",
        "name": "(not-set)"
    },
    "job": {
        "id": "d961166d-be1a-49d4-96ba-c4a5fa881c2a",
        "initiator": "(not-set)",
        "label": "(not-set)",
        "name": "(not-set)",
        "owner": "(not-set)",
        "type": "testrun"
    },
    "start": "2023-06-25 21:06:48.804103",
    "stop": "2023-06-25 21:06:49.271759",
    "result": "FAILED",
    "apod": "(not-set)",
    "detail": {
        "errors": 0,
        "failed": 1,
        "skipped": 0,
        "passed": 0,
        "total": 1
    }
}